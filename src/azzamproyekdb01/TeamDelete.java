/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package azzamproyekdb01;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
/**
 *
 * @author Guest Prodas
 */
public class TeamDelete extends javax.swing.JFrame {

    /**
     * Creates new form DeleteTeam
     */
    public TeamDelete() {
        initComponents();
    }
    
    TeamAdmin teamAdm=new TeamAdmin();
    TeamInterface teamInter=new TeamInterface();
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtTeamId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTeamName = new javax.swing.JTextField();
        txtTeamManager = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnFind = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        btnReturn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Hapus Tim");

        jLabel2.setText("Masukkan ID Tim Yang Ingin Anda Hapus");

        jLabel3.setText("Nama Tim");

        jLabel4.setText("Manajer");

        btnFind.setText("Temukan");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        jLabel5.setText("PERINGATAN!");

        jLabel6.setText("HARAP TELITI DENGAN BAIK APAKAH NAMA DAN MANAJER SUDAH");

        jLabel7.setText("SESUAI DENGAN TIM YANG INGIN DIHAPUS");

        btnDelete.setForeground(new java.awt.Color(255, 0, 0));
        btnDelete.setText("HAPUS");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnReturn.setText("< Kembali");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnReturn)
                        .addGap(137, 137, 137)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnFind)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtTeamId, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtTeamName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(txtTeamManager, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))))))
                .addContainerGap(86, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnDelete)
                .addGap(232, 232, 232))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(btnReturn))
                .addGap(45, 45, 45)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTeamId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFind))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTeamName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTeamManager, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        // TODO add your handling code here:
        TeamDelete.this.setVisible(false);
    }//GEN-LAST:event_btnReturnActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        // TODO add your handling code here:
        String teamIdStr = txtTeamId.getText();
    
        if (teamIdStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Masukkan ID Tim yang ingin Anda cari!", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    
        try {
            Long team_id = Long.parseLong(teamIdStr);  // Konversi input menjadi Long

            // Panggil method untuk mendapatkan tim berdasarkan ID
            Team team = getTeamById(team_id);
        
            // Jika tim ditemukan, tampilkan nama tim dan nama manajer
            txtTeamName.setText(team.getTeam_name());

            // Mendapatkan ID manajer dari tim
            Long managerId = team.getManager_id();

            // Mendapatkan nama manajer menggunakan ID manajer
            String managerName = getManagerNameById(managerId); // Asumsi kamu memiliki metode ini

            // Tampilkan nama manajer
            txtTeamManager.setText(managerName);
        
            JOptionPane.showMessageDialog(this, "Tim ditemukan dan datanya ditampilkan.", "Sukses", JOptionPane.INFORMATION_MESSAGE);
    
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "ID Tim harus berupa angka valid!", "Input Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Terdapat kesalahan! " + ex.getMessage(), "SQL Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String teamIdStr = txtTeamId.getText();

    if (teamIdStr.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Masukkan ID Tim yang ingin Anda hapus!", "Input Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        Long teamId = Long.parseLong(teamIdStr);  // Konversi input menjadi Long
        
        // Tampilkan dialog konfirmasi sebelum menghapus
        int confirm = JOptionPane.showConfirmDialog(this, 
                "Apakah Anda yakin ingin menghapus tim dengan ID: " + teamId + "?", 
                "Konfirmasi Hapus", 
                JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            // Panggil metode untuk menghapus tim berdasarkan ID
            TeamAdmin teamAdmin = new TeamAdmin(); // Pastikan instansiasi sesuai dengan logika program
            teamAdmin.dropTeam(teamId);  // Panggil metode deleteTeam

            // Tampilkan pesan sukses
            JOptionPane.showMessageDialog(this, "Tim berhasil dihapus.", "Sukses", JOptionPane.INFORMATION_MESSAGE);
            
            // Muat ulang tabel dan combo box untuk memperbarui tampilan
            teamInter.loadTeams();
            teamInter.loadTeamsIntoComboBox();
        } else {
            JOptionPane.showMessageDialog(this, "Penghapusan tim dibatalkan.", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
        
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "ID Tim harus berupa angka valid!", "Input Error", JOptionPane.ERROR_MESSAGE);
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Terdapat kesalahan! " + ex.getMessage(), "SQL Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnDeleteActionPerformed
    
    public Team getTeamById(Long teamId) throws SQLException {
    Team team = null;
    String query = "SELECT t.team_name, e.name AS manager_name " +
                   "FROM TeamList t " +
                   "JOIN ManagerList m ON t.manager_id = m.manager_id " +
                   "JOIN EmployeeList e ON m.employee_id = e.employee_id " +
                   "WHERE t.team_id = ?";

    try (Connection conn = DBConnection.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(query)) {
        pstmt.setLong(1, teamId);
        ResultSet rs = pstmt.executeQuery();

        if (rs.next()) {
            String teamName = rs.getString("team_name");
            String managerName = rs.getString("manager_name");
            Long managerId = getManagerIdByName(managerName); // Jika perlu mendapatkan ID manager

            // Buat objek Team dengan nama tim dan ID manajer
            team = new Team(teamId, teamName, managerId); // Pastikan konstruktor Team sesuai
            // Atau jika tidak perlu menyimpan managerId, cukup ambil dari nama
        }
    }

    return team;
}

    
    private String getManagerNameById(Long managerId) throws SQLException {
        String managerName = null;
        String query = "SELECT e.name FROM EmployeeList e JOIN ManagerList m ON e.employee_id = m.employee_id WHERE m.manager_id = ?";

        try (Connection conn = DBConnection.getConnection();
            PreparedStatement pstmt = conn.prepareStatement(query)) {
            pstmt.setLong(1, managerId);
            ResultSet rs = pstmt.executeQuery();
            if (rs.next()) {
                managerName = rs.getString("name");
            }
        }

        return managerName;
    }
    
    public Long getManagerIdByName(String managerName) throws SQLException {
    Long managerId = null;
    String query = "SELECT m.manager_id FROM ManagerList m " +
                   "JOIN EmployeeList e ON m.employee_id = e.employee_id " +
                   "WHERE e.name = ?";

    try (Connection conn = DBConnection.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(query)) {
        pstmt.setString(1, managerName);  // Set nama manajer sebagai parameter
        ResultSet rs = pstmt.executeQuery();

        if (rs.next()) {
            managerId = rs.getLong("manager_id");  // Ambil manager_id dari hasil query
        }
    } catch (SQLException ex) {
        // Tangani kesalahan SQL
        throw new SQLException("Error fetching manager ID: " + ex.getMessage(), ex);
    }

    return managerId;  // Kembalikan managerId atau null jika tidak ditemukan
}

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeamDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeamDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeamDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeamDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeamDelete().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnReturn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txtTeamId;
    private javax.swing.JTextField txtTeamManager;
    private javax.swing.JTextField txtTeamName;
    // End of variables declaration//GEN-END:variables
}
