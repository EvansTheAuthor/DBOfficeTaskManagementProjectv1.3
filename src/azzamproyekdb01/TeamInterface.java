/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package azzamproyekdb01;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Guest OSN
 */
public class TeamInterface extends javax.swing.JFrame {

    /**
     * Creates new form TeamInterface
     */
    public TeamInterface() {
        initComponents();
        try {
        loadTeamsIntoComboBox(); // Memuat data tim ke dalam combo box
        loadTeams(); // Memuat data tim ke dalam tabel
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat memuat data tim: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private Long selectedTeamId;
    private Long team_id;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbTeam = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTeam = new javax.swing.JTable();
        btnFind = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnReturn = new javax.swing.JButton();
        btnToTask = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Temukan Tim yang Anda Inginkan");

        cbTeam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTeamActionPerformed(evt);
            }
        });

        tblTeam.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID Tim", "Nama Tim", "Nama Manajer"
            }
        ));
        jScrollPane1.setViewportView(tblTeam);

        btnFind.setText("Temukan");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        jLabel2.setText("Tim");

        btnReturn.setText("< Kembali");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        btnToTask.setText("Ke Tugas >");
        btnToTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToTaskActionPerformed(evt);
            }
        });

        btnAdd.setForeground(new java.awt.Color(0, 204, 0));
        btnAdd.setText("+ Buat Tim Baru");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setForeground(new java.awt.Color(255, 0, 51));
        btnDelete.setText("Hapus Tim");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(jLabel1)
                .addContainerGap(104, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(btnReturn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addGap(35, 35, 35)
                        .addComponent(btnDelete))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(cbTeam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnFind)))
                .addGap(98, 98, 98)
                .addComponent(btnToTask))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTeam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFind)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnToTask)
                    .addComponent(btnReturn)
                    .addComponent(btnAdd)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        // TODO add your handling code here:
        AdminMenu admMenu=new AdminMenu();
        admMenu.setVisible(true);
        TeamInterface.this.setVisible(false);
    }//GEN-LAST:event_btnReturnActionPerformed

    private void btnToTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToTaskActionPerformed
        // TODO add your handling code here:
        TaskTableInterface table=new TaskTableInterface();
        table.setVisible(true);
        TeamInterface.this.setVisible(false);
    }//GEN-LAST:event_btnToTaskActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        TeamAdd addTeam=new TeamAdd();
        addTeam.setVisible(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        TeamDelete delete=new TeamDelete();
        delete.setVisible(true);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        // TODO add your handling code here:
        String selectedTeamName = cbTeam.getSelectedItem().toString();
    try {
        Long team_id = getTeamIdByName(selectedTeamName); // Mendapatkan ID tim berdasarkan nama
        if (team_id != null) {
            TeamMemberInterface teamMemberInterface = new TeamMemberInterface(team_id); // Pass team_id ke constructor
            teamMemberInterface.setVisible(true);
            TeamInterface.this.setVisible(false);// Tampilkan TeamMemberInterface
        } else {
            JOptionPane.showMessageDialog(this, "Tim tidak ditemukan!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error mendapatkan ID Tim: " + ex.getMessage());
    }
    }//GEN-LAST:event_btnFindActionPerformed

    private void cbTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTeamActionPerformed
        // TODO add your handling code here:
         Object selectedItem = cbTeam.getSelectedItem();
    if (selectedItem != null) {
        String selectedTeamName = selectedItem.toString();
        try {
            selectedTeamId = getTeamIdByName(selectedTeamName); // Mendapatkan ID tim berdasarkan nama
            // Jika perlu, bisa ditambahkan logika lain
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error mendapatkan ID Tim: " + ex.getMessage());
        }
    }
    }//GEN-LAST:event_cbTeamActionPerformed
    
    void loadTeamsIntoComboBox()throws SQLException{
        cbTeam.removeAllItems();
        
        String sql="select team_name from TeamList";
        try(Connection conn=DBConnection.getConnection();
            PreparedStatement pstmt=conn.prepareStatement(sql);
            ResultSet rs=pstmt.executeQuery()){
            while(rs.next()){
                String team_name=rs.getString("team_name");
                cbTeam.addItem(team_name);
            }
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this, "Gagal memuat isi tim: "+ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public Long getTeamIdByName(String teamName) throws SQLException {
        Connection conn = DBConnection.getConnection();
        String query = "SELECT team_id FROM TeamList WHERE team_name = ?";
        try (PreparedStatement ps = conn.prepareStatement(query)) {
            ps.setString(1, teamName);
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    return rs.getLong("team_id");
                } else {
                    throw new SQLException("Tim tidak ditemukan!");
                }
            }
        }
    }
    
    void loadTeams() {
    DefaultTableModel tableModel = (DefaultTableModel) tblTeam.getModel();
    tableModel.setRowCount(0);  // Bersihkan tabel sebelum memuat data baru

    // Query untuk memuat semua data tim dengan join ke EmployeeList untuk mengambil nama manajer
    String query = "SELECT t.team_id, t.team_name, e.name AS manager_name"
            + " FROM TeamList t JOIN ManagerList m ON"
            + " t.manager_id = m.manager_id JOIN EmployeeList e"
            + " ON m.employee_id = e.employee_id;";

    try (Connection conn = DBConnection.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(query);
         ResultSet rs = pstmt.executeQuery()) {

        while (rs.next()) {
            long team_id = rs.getLong("team_id");
            String team_name = rs.getString("team_name");
            String manager_name = rs.getString("manager_name");

            // Tambahkan data ke tabel
            Object[] row = {team_id, team_name, manager_name};
            tableModel.addRow(row);
        }
        } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error saat memuat data tim: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeamInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeamInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeamInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeamInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeamInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btnToTask;
    private javax.swing.JComboBox<String> cbTeam;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTeam;
    // End of variables declaration//GEN-END:variables
}
