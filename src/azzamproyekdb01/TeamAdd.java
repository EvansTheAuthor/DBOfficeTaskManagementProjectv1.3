/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package azzamproyekdb01;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Guest Prodas
 */
public class TeamAdd extends javax.swing.JFrame {

    /**
     * Creates new form AddTeam
     */
    public TeamAdd() {
        initComponents();
        loadManagersIntoComboBox();
    }
    
    TeamAdmin teamAdm=new TeamAdmin();
    TeamInterface teamInter=new TeamInterface();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTeamId = new javax.swing.JTextField();
        txtTeamName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbManager = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        btnReturn = new javax.swing.JButton();
        btnAdvanced = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Tambahkan Tim");

        jLabel2.setText("Kode Tim");

        jLabel3.setText("Nama Tim");

        jLabel4.setText("Penanggung Jawab");

        cbManager.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbManagerActionPerformed(evt);
            }
        });

        btnAdd.setForeground(new java.awt.Color(0, 204, 0));
        btnAdd.setText("+ Tambahkan");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnReturn.setText("< Kembali");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        btnAdvanced.setText(">");
        btnAdvanced.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdvancedActionPerformed(evt);
            }
        });

        jLabel5.setText("Advanced Mode");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdvanced))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(btnReturn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdd)
                .addGap(25, 25, 25))
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbManager, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTeamId, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                    .addComponent(txtTeamName))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAdvanced)
                        .addComponent(jLabel5)))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTeamId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTeamName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbManager, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnReturn))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        // TODO add your handling code here:
        TeamAdd.this.setVisible(false);
    }//GEN-LAST:event_btnReturnActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
String teamId = txtTeamId.getText();
String team_name = txtTeamName.getText();
String managerName = cbManager.getSelectedItem().toString();

if (teamId.isEmpty() || team_name.isEmpty() || managerName.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Isi Semua Data Yang Diminta", "Tidak Bisa Menginput Data", JOptionPane.ERROR_MESSAGE);
    return;  // Menghentikan eksekusi jika ada data yang kosong
}

try {
    // Mengambil team_id
    Long team_id = Long.parseLong(teamId);

    // Ekstraksi manager_id dari ComboBox
    // Format "Ahmad (ID: 1001)"
    String managerIdString = managerName.substring(managerName.indexOf("ID: ") + 4, managerName.length() - 1);
    Long manager_id = Long.parseLong(managerIdString);  // Konversi dari String ke Long

    // Panggil metode untuk menyimpan tim
    teamAdm.setNewTeam(team_id, team_name, manager_id);

    // Memperbarui daftar tim di comboBox dan tabel
    teamInter.loadTeams();
    teamInter.loadTeamsIntoComboBox();
    JOptionPane.showMessageDialog(this, "Tim berhasil ditambahkan!", "Berhasil", JOptionPane.INFORMATION_MESSAGE);
} catch (NumberFormatException ex) {
    JOptionPane.showMessageDialog(this, "ID tim atau manajer tidak valid! Pastikan format angka sudah benar.", "Error", JOptionPane.ERROR_MESSAGE);
} catch (SQLException ex) {
    JOptionPane.showMessageDialog(this, "Terdapat Kesalahan SQL: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_btnAddActionPerformed

    private void cbManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbManagerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbManagerActionPerformed

    private void btnAdvancedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdvancedActionPerformed
        // TODO add your handling code here:
        TeamAddAdvanced add=new TeamAddAdvanced();
        add.setVisible(true);
        TeamAdd.this.setVisible(false);
    }//GEN-LAST:event_btnAdvancedActionPerformed
    
    public Long getManagerIdByName(String managerName) throws SQLException {
    Connection conn = DBConnection.getConnection();
    String query = "SELECT manager_id FROM ManagerList WHERE manager_name = ?";
        try (PreparedStatement ps = conn.prepareStatement(query)) {
            ps.setString(1, managerName);
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    return rs.getLong("manager_id");
                } else {
                throw new SQLException("Manager tidak ditemukan!");
                }
            }
        }
    }
    
    void loadManagersIntoComboBox() {
    // Kosongkan ComboBox sebelum menambahkan data baru
    cbManager.removeAllItems();

    String query = "SELECT m.manager_id, e.name "
                 + "FROM ManagerList m "
                 + "JOIN EmployeeList e ON m.employee_id = e.employee_id";

    try (Connection conn = DBConnection.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(query);
         ResultSet rs = pstmt.executeQuery()) {

        while (rs.next()) {
            long manager_id = rs.getLong("manager_id");
            String employee_name = rs.getString("name");

            // Gabungkan nama manajer dan ID untuk dimasukkan ke dalam ComboBox
            String managerItem = employee_name + " (ID: " + manager_id + ")";
            cbManager.addItem(managerItem);  // Tambahkan ke ComboBox
        }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat memuat data manajer: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeamAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeamAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeamAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeamAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeamAdd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAdvanced;
    private javax.swing.JButton btnReturn;
    private javax.swing.JComboBox<String> cbManager;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtTeamId;
    private javax.swing.JTextField txtTeamName;
    // End of variables declaration//GEN-END:variables
}
